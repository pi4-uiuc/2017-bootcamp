<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Met on PI4 Computational Bootcamp</title>
    <link>/tags/met/</link>
    <description>Recent content in Met on PI4 Computational Bootcamp</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 31 May 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/met/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>6. Accessing Sensor Data</title>
      <link>/2017/05/31/accessing-sensor-data/</link>
      <pubDate>Wed, 31 May 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/05/31/accessing-sensor-data/</guid>
      <description>Hyperspectral Data Calibration Targets These were collected on April 15 2017 every ~15 minutes
library(ncdf4) library(dplyr) hsi_calibration_dir &amp;lt;- &amp;#39;/data/terraref/sites/ua-mac/Level_1/hyperspectral/2017-04-15&amp;#39; hsi_calibration_files &amp;lt;- dir(hsi_calibration_dir, recursive = TRUE, full.names = TRUE) fileinfo &amp;lt;- bind_rows(lapply(hsi_calibration_files, file.info)) %&amp;gt;% mutate(size_gb = size/1073741824) calibration_nc &amp;lt;- nc_open(hsi_calibration_files[200]) a &amp;lt;- calibration_nc$var$rfl_img #calibration_nc$dim$x$len 1600 #calibration_nc$dim$y$len x_length &amp;lt;- round(calibration_nc$dim$x$len / 10) y_length &amp;lt;- round(calibration_nc$dim$y$len * 3/4) xstart &amp;lt;- ceiling(calibration_nc$dim$x$len / 2) - floor(x_length / 2) + 1 ystart &amp;lt;- ceiling(calibration_nc$dim$y$len / 2) - floor(y_length / 2) + 1 rfl &amp;lt;- ncvar_get(calibration_nc, &amp;#39;rfl_img&amp;#39;, #start = c(1, xstart, ystart), #count = c(955, x_length, y_length) start = c(2, 2, 2), count = c(1320, 10, 954) ) x &amp;lt;- ncvar_get(calibration_nc, &amp;#39;x&amp;#39;, start = 100, count = 160) y &amp;lt;- ncvar_get(calibration_nc, &amp;#39;y&amp;#39;, start = 100, count = 1324) lambda &amp;lt;- calibration_nc$dim$wavelength$vals for(i in 1 + 0:10*95){ image(x = x, y = y, z = rfl[i,,], xlab = &amp;#39;x (m)&amp;#39;, ylab = &amp;#39;y (m)&amp;#39;, col = rainbow(n=100), main = paste(&amp;#39;wavelength&amp;#39;, udunits2::ud.</description>
    </item>
    
  </channel>
</rss>